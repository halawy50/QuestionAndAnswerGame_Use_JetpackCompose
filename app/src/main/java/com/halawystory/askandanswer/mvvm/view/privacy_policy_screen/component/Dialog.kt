package com.halawystory.askandanswer.mvvm.view.component

import android.content.Context
import android.media.MediaPlayer
import androidx.compose.foundation.clickable
import androidx.compose.foundation.interaction.MutableInteractionSource
import androidx.compose.foundation.layout.Column
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.text.style.TextAlign
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.rememberScrollState
import androidx.compose.foundation.verticalScroll
import androidx.compose.material.*
import androidx.compose.material3.AlertDialog
import androidx.compose.material3.Button
import androidx.compose.material3.ButtonDefaults
import androidx.compose.material3.Checkbox
import androidx.compose.material3.CheckboxDefaults
import androidx.compose.material3.CircularProgressIndicator
import androidx.compose.runtime.*
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.text.TextStyle
import androidx.compose.ui.text.font.FontWeight
import com.halawystory.askandanswer.R
import com.halawystory.askandanswer.ui.theme.ibmBold
import com.halawystory.askandanswer.ui.theme.orange

import kotlinx.coroutines.*

@Composable
fun PrivacyPolicyDialog(context: Context , onAccept: (Boolean) -> Unit) {
    var isChecked by remember { mutableStateOf(false) }
    var isLoading by remember { mutableStateOf(false) }
    val interactionSource = remember { MutableInteractionSource() } // ูุฅุฒุงูุฉ ุงูุชุฃุซูุฑ

    AlertDialog(
        containerColor = Color.White,
        onDismissRequest = { /* ูููุน ุงููุณุชุฎุฏู ูู ุฅุบูุงู ุงูู Dialog ุจุฏูู ุงูููุงููุฉ */ },
        title = {
            Text(
                style = TextStyle(
                    fontFamily = ibmBold
                ),
                text = "ุงูุณูุงุณุฉ ูุงูุฎุตูุตูุฉ",
                fontSize = 20.sp,
                color = orange,
                fontWeight = FontWeight.Bold,
                textAlign = TextAlign.Center,
                modifier = Modifier.fillMaxWidth()
            )
        },
        text = {
            Column(modifier = Modifier.fillMaxWidth()) {
                // ูุต ุงูุณูุงุณุฉ ูุงูุฎุตูุตูุฉ ุฏุงุฎู Scroll
                Column(
                    modifier = Modifier
                        .height(250.dp)
                        .verticalScroll(rememberScrollState())
                        .padding(8.dp)
                ) {
                    Text(
                        style = TextStyle(
                            fontFamily = ibmBold
                        ),
                         text = """
                         ุณูุงุณุฉ ุงูุฎุตูุตูุฉ โ ูุนุจุฉ "ุณุคุงู ูุฌูุงุจ"
                        ูุญู ูุญุชุฑู ุฎุตูุตูุชู ููุณุนู ูุชูููุฑ ุชุฌุฑุจุฉ ูุนุจ ููุชุนุฉ ูุขููุฉ ูู ูุนุจุฉ "ุณุคุงู ูุฌูุงุจ". ูุฐู ุงูุณูุงุณุฉ ุชูุถุญ ููููุฉ ุชุนุงูููุง ูุน ุจูุงูุงุชู ูููููุฉ ุงุณุชุฎุฏุงู ุงูุฅุนูุงูุงุช ุฏุงุฎู ุงููุนุจุฉ.
                        
                        1. ุงูุฅุนูุงูุงุช:
                        ุชุชุถูู ุงููุนุจุฉ ุฅุนูุงูุงุช ูู ุทุฑู ุซุงูุซ ููู Unity Ads ููุทุ ูุชูุณุชุฎุฏู ุจูุธุงู ุงูุฅุนูุงูุงุช ุงููููุงูุฃุฉ (Rewarded Ads).
                        ุชูุนุฑุถ ูุฐู ุงูุฅุนูุงูุงุช ููุท ูู ุญุงูุงุช ูุญุฏุฏุฉุ ูุซู:
                        
                        ุนูุฏูุง ูุฎุณุฑ ุงููุงุนุจ ูู ูุฑุญูุฉ ูุง ููุฑุบุจ ูู ุงุณุชููุงู ุงูุชุญุฏู ูุฌุงููุง.
                        
                        ุจูุฐุง ุงูุดููุ ูููู ููุงุนุจูู ููุงุตูุฉ ุงููุนุจ ุฏูู ุฏูุน ุฃู ููุงุจูุ ูู ุฎูุงู ูุดุงูุฏุฉ ุฅุนูุงู ูุงุญุฏ ููุท ูู ูู ูุฑุฉ ููุทูุจ ูููุง ุงูุงุณุชูุฑุงุฑ ุจุนุฏ ุงูุฎุณุงุฑุฉ.
                        
                        2. ุงููุฑุงุญู ุฏุงุฎู ุงููุนุจุฉ:
                        ุชุชููู ุงููุนุจุฉ ูู ุฃุฑุจุน ูุณุชููุงุช ุชุฏุฑูุฌูุฉ:
                        
                        ูุจุชุฏุฆ
                        
                        ูุชูุณุท
                        
                        ุตุนุจ
                        
                        ุฎุจูุฑ
                        
                        ูู ูุณุชูู ูุญุชูู ุนูู 40 ุณุคุงููุงุ ูููุทูู ุนูู ูู ูุณุชูู ุงุณู "ุชุญุฏู" ุฏุงุฎู ุงูุชุทุจูู. ุจูุฌุฑุฏ ุฅููุงู ูุณุชูู ูุนููุ ููุชูู ุงููุงุนุจ ุชููุงุฆููุง ุฅูู ุงููุณุชูู ุงูุชุงูู.
                        
                        3. ุฌูุน ุงูุจูุงูุงุช ูุงุณุชุฎุฏุงู Android ID:
                        ูุฏ ูุณุชุฎุฏู ูุนุฑู Android (Android ID) ูุชุญุณูู ุชุฌุฑุจุฉ ุงูุฅุนูุงูุงุช ูุชุฎุตูุตูุง ุจูุงุกู ุนูู ุณููู ูุชูุถููุงุช ูู ูุณุชุฎุฏู. ูุง ูุชู ุงุณุชุฎุฏุงู ูุฐู ุงูุจูุงูุงุช ูุฃุบุฑุงุถ ุบูุฑ ูุดุฑูุนุฉ ุฃู ููุดุงุฑูุชูุง ูุน ุฃุทุฑุงู ุฃุฎุฑู ุบูุฑ ููุซููุฉ.
                        
                        4. ุงูููุงููุฉ ุนูู ุณูุงุณุฉ ุงูุฎุตูุตูุฉ:
                        ุนูุฏ ุชุญูููู ููุนุจุฉุ ูุฅูู ุชูุงูู ุชููุงุฆููุง ุนูู ุณูุงุณุฉ ุงูุฎุตูุตูุฉ ุงูููุถุญุฉ ุฃุนูุงู.
                        ุฅุฐุง ูู ุชูู ููุงูููุง ุนูู ูุฐู ุงูุดุฑูุทุ ููุฑุฌู ุนุฏู ุงุณุชุฎุฏุงู ุงููุนุจุฉ ุฃู ุญุฐููุง ูู ุฌูุงุฒู.
                        
                        5. ุงูุชุญุฏูุซุงุช ุงููุณุชูุจููุฉ:
                        ุงููุนุจุฉ ูุง ุฒุงูุช ูู ูุฑุญูุฉ ุงูุชุทููุฑ ุงูุฃูููุ ููุฏ ูููู ุจุฅุฌุฑุงุก ุชุญุฏูุซุงุช ุฏูุฑูุฉ ูุชุญุณูู ุงูุฃุฏุงุก ุฃู ุชุบููุฑ ุจุนุถ ุงูุจููุฏ ูู ุณูุงุณุฉ ุงูุฎุตูุตูุฉ. ุณูุชู ุฅุดุนุงุฑ ุงููุณุชุฎุฏููู ุจุฐูู ุฏุงุฎู ุงูุชุทุจูู.
                        
                        6. ุงูุชูุงุตู ูุงูุฏุนู:
                        ุฅุฐุง ูุงุฌูุช ุฃู ูุดููุฉ ุฃู ูุฏูู ุงุณุชูุณุงุฑ ุจุฎุตูุต ุงูุฎุตูุตูุฉ ุฃู ุงุณุชุฎุฏุงู ุงููุนุจุฉุ ูุง ุชุชุฑุฏุฏ ูู ุงูุชูุงุตู ูุนูุง ุนุจุฑ ุงูุจุฑูุฏ ุงูุฅููุชุฑููู:
                        ๐ง ahmedabdelraheem190@gmail.com
                        """.trimIndent(),
                        fontSize = 16.sp,
                        textAlign = TextAlign.Right
                    )
                }

                Spacer(modifier = Modifier.height(16.dp))

                // โ ููู ุงูู Checkbox ุฎุงุฑุฌ ุงูู Scroll
                Row(
                    verticalAlignment = Alignment.CenterVertically,
                    modifier = Modifier
                        .fillMaxWidth()
                        .padding(horizontal = 0.dp)
                        .clickable(
                            interactionSource = interactionSource,
                            indication = null // โ ุฅุฒุงูุฉ ุฃู ุชุฃุซูุฑ ุนูุฏ ุงูููุณ

                        ) {
                            MediaPlayer.create(context , R.raw.pop).start()
                            isChecked = !isChecked
                        } // ุงูุถุบุท ุนูู ุฃู ููุงู ูุญุฏุฏ ุงูู Checkbox
                ) {
                    Checkbox(
                        checked = isChecked,
                        onCheckedChange = { isChecked = it },
                        colors = CheckboxDefaults.colors(
                            checkedColor = orange, // ููู ุงูุฎูููุฉ ุนูุฏ ุงูุชูุนูู
                            uncheckedColor = Color.Gray, // ููู ุงูุฎูููุฉ ุนูุฏ ุนุฏู ุงูุชูุนูู
                            checkmarkColor = Color.White // ููู ุงูุนูุงูุฉ โ
                        )
                    )
                    Text(
                        style = TextStyle(
                        fontFamily = ibmBold
                    ),
                        text = "ูู ุชูุงูู ุนูู ุงูุณูุงุณุฉ ูุงูุฎุตูุตูุฉุ", modifier = Modifier.padding(start = 0.dp))
                }
            }
        },
        confirmButton = {
            Button(
                onClick = {
                    isLoading = true
                    CoroutineScope(Dispatchers.Main).launch {
                        MediaPlayer.create(context , R.raw.opendoor).start()

                        delay(1000) // ูุญุงูุงุฉ ุญูุธ ุงูููุงููุฉ
                        onAccept(true)
                    }
                },
                enabled = isChecked,
                colors = ButtonDefaults.buttonColors(
                    containerColor = if (isChecked) orange else Color.Gray, // ุฎูููุฉ ุงูุฒุฑ
                ),
                modifier = Modifier.fillMaxWidth().height(50.dp)
            ) {
                if (isLoading) {
                    CircularProgressIndicator(color = Color.White, modifier = Modifier.size(20.dp))
                } else {
                    Text(
                        text = "ุฃูุงูู ุนูู ุงูุณูุงุณุฉ ูุงูุฎุตูุตูุฉ",
                        color = if (isChecked) Color.White else Color.White,
                        style = TextStyle(
                            fontFamily = ibmBold
                        )
                    )
                }
            }
        }
    )
}
